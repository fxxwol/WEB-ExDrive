@using ExDrive.Helpers
@using ExDrive.Helpers.Constants
@using ExDrive.Models

<!DOCTYPE html>
<html lang="en">
<head>
    <meta chaster="UTF-8">
    <link rel="stylesheet" href="~/css/trashcan.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@1,300&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lato&display=swap" rel="stylesheet">
</head>
<body>
        <div class="buttons__rectangle8">
       
    </div>
    <div class="ccontext-menu">
        <div class="ccontext-menu__item1">Recover</div>
        <div class="ccontext-menu__divider"></div>
        <div class="ccontext-menu__item4">Delete</div>
    </div>

    @using (Html.BeginForm("DeletePermanentlyHandler", "Trashcan"))
    {
             <input type="submit" value="Delete" class="delete__button" title="Delete your file"/>
       
    }
    @using (Html.BeginForm("RecoverHandler", "Trashcan"))
    {
        <input type="submit" value="Recover" class="recovery__button" title="Recover your file"/>
    }
    @using (Html.BeginForm("SearchRedirectHandler", "Trashcan"))
    {
        <input type="search" placeholder="Enter file name" value="@ViewData["GetFiles"]" name="searchString" style="width:400px; margin-left:270px; top: 93px; position:absolute;" />
        <input type="submit" value="Search" class="search__button1" title="Search your file"/>
    }
   
 
  <div class="trashcan__window">
        @model List<UserFile>
        @using (Html.BeginForm("FileClickHandler", "Trashcan"))
        {
            string iconPath = String.Empty;
            string defaultIconPath = String.Empty;

            @for (var index = 0; index < @Model.Count; ++index)
            {
                var file = @Model.ElementAt(index);

                if (file.IsFavourite == false)
                {
                    iconPath = new SelectFileIcon().Select(file.Id);
                }
                else
                {
                   iconPath = new SelectFileIcon().SelectFavourite(file.Id);
                }
                
                <div class="item" title="@file.Name" style="border: medium none">
                    <img src="@Url.Content(iconPath)"
                    value=@index runat="server" 
                    style="border: medium none; width: 100px; height: 100px; border-radius: 15px;"/>
                    <span class="caption">@file.Name</span>
                </div>
            }
        }
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>

        const cm = document.querySelector('.ccontext-menu');
        const deletebtn = document.querySelector('.ccontext-menu__item4');
        const recoverbtn = document.querySelector('.ccontext-menu__item1');

        function showContextMenu (show = true) {
            cm.style.display = show ? 'block' : 'none';
        }

        recoverbtn.addEventListener('click', function(event) {
           $.ajax({
            url: '@Url.Action("RecoverHandler","Trashcan")'
            }).done(function() {
                window.location = window.location.href;
            }); 
        });

        deletebtn.addEventListener('click', function(event) {
           $.ajax({
            url: '@Url.Action("DeletePermanentlyHandler","Trashcan")'
            }).done(function() {
            window.location = window.location.href;
            }); 
        });

        window.addEventListener('click', (e) => {
            
            let pos = e.target.getAttribute("value");
            if (pos != null && pos != 'Search' && pos < @Model.Count)
            {
                $.ajax({
            url: '@Url.Action("FileClickHandler","Trashcan")',
            data: { afile: pos }
            }).done(function() {
                if (e.target.style.border == "medium none")
                    e.target.style.border = "inset #408aff 8px";
                else
                    e.target.style.border = "medium none";
            });
            }
        });

        window.addEventListener('contextmenu', (e) => {

            e.preventDefault();

            showContextMenu();
            
            cm.style.top = e.y + cm.offsetHeight > window.innerHeight ?
            window.innerHeight - cm.offsetHeight + "px" : e.y + "px";

            cm.style.left = e.x + cm.offsetWidth > window.innerWidth ?
            window.innerWidth - cm.offsetWidth + "px" : e.x + "px";
        });

        window.addEventListener('click', () => {
            showContextMenu(false);
        });
    </script>

</body>
</html>